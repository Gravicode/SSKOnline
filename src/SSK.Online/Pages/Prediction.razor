@page "/prediction"

@using SSK.Online.Data
@inject PredictionService PredictionService1
@using PKDSS.CoreLibrary.Model


    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-12">
                <h1>SSK Online v0.1</h1>
                <p>This app will predict the soil element and give a recommendation for fertilizer.</p>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-4">

                <select @bind="SelKomoditas">
                    <option value="Padi">Padi</option>
                    <option value="Jagung">Jagung</option>
                    <option value="Kedelai">Kedelai</option>

                </select>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-4">
                <button class="btn btn-primary" @onclick="Predict">Call Service</button>

            </div>
        </div>
        <div class="row">
            <div class="col-lg-12">
                @Status
                @((MarkupString)Data)
                @((MarkupString)Recommendation)
            </div>
        </div>
    </div>

@code {
    string Data;
    string Status;
    string Recommendation;
    string SelKomoditas;

    async void Predict()
    {
        Status = "loading...";
        var Temp = "<table class='table table-bordered'><tr><th>Unsur</th><th>Nilai</th></tr>";
        var result = await PredictionService1.InferenceWithApi();
        foreach (var item in result)
        {
            Temp += $"<tr><td>{item.Key}</td><td>{item.Value}</td></tr>";
        }
        Temp += "</table>";
        Data = Temp;
        Status = "";
        var input = new ModelOutput();
        input.Bray1_P2O5 = result["Bray1_P2O5"];
        input.Ca = result["Ca"];
        input.CLAY = result["CLAY"];
        input.C_N = result["C_N"];
        input.HCl25_K2O = result["HCl25_K2O"];
        input.HCl25_P2O5 = result["HCl25_P2O5"];
        input.Jumlah = result["Jumlah"];
        input.K = result["K"];
        input.KB_adjusted = result["KB_adjusted"];
        input.KJELDAHL_N = result["KJELDAHL_N"];
        input.KTK = result["KTK"];
        input.Mg = result["Mg"];
        input.Morgan_K2O = result["Morgan_K2O"];
        input.Na = result["Na"];
        input.Olsen_P2O5 = result["Olsen_P2O5"];
        input.PH_H2O = result["PH_H2O"];
        input.PH_KCL = result["PH_KCL"];
        input.RetensiP = result["RetensiP"];
        input.SAND = result["SAND"];
        input.SILT = result["SILT"];
        input.WBC = result["WBC"];
        var result2 = PredictionService1.GetFertilizerRecommendation(SelKomoditas, input);
        var temp2 = "<table class='table table-bordered'><tr><th>Fertilizer</th><th>Recommendation</th></tr>";

        temp2 += $"<tr><td>KCL</td><td>{(result2.KCL < 0 ? "-" : result2.KCL.ToString("n2"))}</td></tr>";
        temp2 += $"<tr><td>SP36</td><td>{(result2.SP36 < 0 ? "-" : result2.SP36.ToString("n2"))}</td></tr>";
        temp2 += $"<tr><td>Urea</td><td>{(result2.Urea < 0 ? "-" : result2.Urea.ToString("n2"))}</td></tr>";
        temp2 += $"<tr><td>NPK 15</td><td>{ (result2.NPK15 < 0 ? "-" : result2.NPK15.ToString("n2"))  }</td></tr>";
        temp2 += $"<tr><td>Uread 15</td><td>{ (result2.Urea15 < 0 ? "-" : result2.Urea15.ToString("n2")) }</td></tr>";
        temp2 += "<table>";
        Recommendation = temp2;
        StateHasChanged();

    }

}
